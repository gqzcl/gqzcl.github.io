[{"title":"Codeforces_Volatile_Kite题解","date":"2018-12-07T01:49:02.000Z","path":"/posts/62b15c63/","text":"&#x524D;&#x8A00;&#x8FD9;&#x4E2A;&#x9898;&#x76EE;&#x7684;&#x601D;&#x8DEF;&#x8FD8;&#x662F;&#x5F88;&#x660E;&#x786E;&#x7684;&#xFF0C;&#x5199;&#x8D77;&#x6765;&#x4E5F;&#x8FD8;&#x597D;&#x5427;&#xFF08;&#x8FD8;&#x662F;&#x5931;&#x8D25;&#x4E86;&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x4E5F;&#x662F;&#x6458;&#x81EA;&#x7F51;&#x4E0A;&#xFF0C;&#x9644;&#x52A0;&#x4E86;&#x4E00;&#x70B9;&#x6CE8;&#x91CA;&#x800C;&#x5DF2;&#x3002; &#x4E8C;&#x5206;&#x679A;&#x4E3E;&#x8FD9;&#x4E2A;d&#x503C;&#x3002; &#x5047;&#x8BBE;&#x70B9;a&#x548C;&#x70B9;b&#x5728;&#x70B9;p&#x4E24;&#x4FA7;&#xFF0C;&#x90A3;&#x4E48;&#x95F4;&#x9694;&#x6700;&#x8FD1;&#x7684;&#x79FB;&#x52A8;&#x662F;p&#x5411;&#x91CC;&#x79FB;&#x52A8;&#x8DDD;&#x79BB;d&#xFF0C;a&#x548C;b&#x5411;&#x5916;&#x79FB;&#x52A8;&#x8DDD;&#x79BB;d&#x3002;&#x5982;&#x679C;&#x8FD9;&#x6837;&#x4E4B;&#x540E;&#x53D8;&#x51F9;&#x4E86;&#xFF0C;&#x5C31;&#x8868;&#x793A;&#x8FD9;&#x4E2A;&#x8DDD;&#x79BB;&#x5927;&#x4E86;&#x3002;&#x4E8C;&#x5206;&#x5224;&#x65AD;&#x7684;&#x65F6;&#x5019;&#x53EA;&#x9700;&#x8981;&#x5224;&#x65AD;&#x70B9;p&#x91CC;&#x76F4;&#x7EBF;ab&#x7684;&#x8DDD;&#x79BB;&#x662F;&#x5426;&#x5927;&#x4E8E;2d&#x5373;&#x53EF;&#x3002; &#x9898;&#x76EE;&#x539F;&#x9898;&#x94FE;&#x63A5; click here &#x9898;&#x89E3;&#x5982;&#x4E0B;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253clude&lt;cmath&gt;using namespace std;const int N = 10005;const double eps = 1e-10;int n;struct lp{ double x,y,rad; int id; lp(){} lp(double a,double b){x=a,y=b;}}cw[N];lp operator +(lp A,lp B){ return (lp){A.x+B.x,A.y+B.y};}//&#x91CD;&#x8F7D;&#x4E00;&#x4E0B;lp operator -(lp A,lp B){ return (lp){A.x-B.x,A.y-B.y};}inline double crossDot(lp a,lp b){ return a.x*b.y-a.y*b.x;}inline double area2(lp a,lp b,lp c){ return crossDot(b-a,c-a);}double leng(lp A,lp B){ return sqrt((A.x-B.x)*(A.x-B.x)+(A.y-B.y)*(A.y-B.y));}double disToLine(lp P,lp A,lp B){//&#x6C42;&#x51FA;&#x8DDD;&#x79BB; return fabs(crossDot(B-A,P-A))/leng(A,B);}inline bool ok(double m){//&#x5224;&#x65AD;&#x6761;&#x4EF6; for(int i=1;i&lt;=n;++i){ if(disToLine(cw[i],cw[i-1],cw[i+1])&lt;=2*m) return false; } return true;}int main(){ while(~scanf(&quot;%d&quot;,&amp;n)){ for(int i=1;i&lt;=n;++i){ scanf(&quot;%lf%lf&quot;,&amp;cw[i].x,&amp;cw[i].y); } cw[0]=cw[n]; cw[n+1]=cw[1]; double l=0,r=1e18,m,ans; for(int i=0;i&lt;100;++i){ m=(l+r)/2; if(ok(m))l=m,ans=m; else r=m; } printf(&quot;%.10f\\n&quot;,ans ); } return 0;} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","excerpt":"","tags":[{"name":"ACM","slug":"ACM","permalink":"http://molingu.top/tags/ACM/"}]},{"title":"Codeforces_Voltage_Keepsake题解","date":"2018-12-06T07:47:03.000Z","path":"/posts/f6087856/","text":"&#x524D;&#x8A00;&#x6211;&#x679C;&#x7136;&#x662F;&#x83DC;&#x9E21;&#xFF0C;&#x597D;&#x5427;&#xFF0C;&#x4E00;&#x53EA;&#x81EA;&#x95ED;&#x7684;&#x83DC;&#x9E21;&#x3002; &#x9898;&#x76EE;&#x539F;&#x9898;&#x94FE;&#x63A5;&#xFF1A;click here &#x4E5F;&#x4E0D;&#x591A;&#x8BF4;&#x5565;&#x4E86;&#xFF0C;&#x76F4;&#x63A5;&#x9898;&#x89E3;&#x5427;&#xFF08;&#x53CD;&#x6B63;&#x4E0D;&#x662F;&#x81EA;&#x5DF1;&#x60F3;&#x51FA;&#x6765;&#x7684; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253#include &lt;iostream&gt;#include &lt;cmath&gt;using namespace std;typedef long long ll;const int N=2e5+20;double p,a[N],b[N],t[N];int n;bool check(double x){ for(int i=1;i&lt;=n;i++) t[i]=b[i]; for(int i=1;i&lt;=n;i++) t[i]-=a[i]*x; double cnt=0;//&#x628A;&#x8D1F;&#x7684;&#x5145;&#x5230;0 &#x6240;&#x9700;&#x8981;&#x65F6;&#x95F4; for(int i=1;i&lt;=n;i++) { if(t[i]&lt;0) cnt+=fabs(t[i])/p; } return cnt&lt;=x;}int main(){ while(cin&gt;&gt;n&gt;&gt;p) { double s=0; for(int i=1;i&lt;=n;i++) { scanf(&quot;%lf%lf&quot;,&amp;a[i],&amp;b[i]); s+=a[i]; } double ans; if(p&gt;=s) puts(&quot;-1&quot;); else { double l=0,r=9e17;// for(int i=0;i&lt;150;i++)//&#x6BD4;&#x7528;eps&#x5FEB;&#x7684;&#x591A; { double mid=(l+r)/2.0; if(check(mid)) { ans=mid; l=mid; } else r=mid; } printf(&quot;%.10lf\\n&quot;,ans); } } return 0;} &#x6CA1;&#x60F3;&#x8FC7;&#x8FD9;&#x6837;&#x7684;&#x89E3;&#x6CD5;&#xFF0C;&#x770B;&#x5230;&#x8FD9;&#x6837;&#x505A;&#x53EA;&#x80FD;&#x8BF4;tql&#xFF0C;&#x7136;&#x540E;&#x5C31;&#x662F;&#x7CBE;&#x5EA6;&#x65B9;&#x9762;&#x7684;&#x95EE;&#x9898;&#x4E5F;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x4E00;&#x4E0B;&#xFF0C;&#x8FD9;&#x91CC;&#x4E5F;&#x5904;&#x7406;&#x7684;&#x5F88;&#x597D; &#x7ED3;&#x675F; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","excerpt":"","tags":[{"name":"ACM","slug":"ACM","permalink":"http://molingu.top/tags/ACM/"}]},{"title":"Codeforces_Vulnerable_Kerbals题解","date":"2018-12-06T01:49:57.000Z","path":"/posts/6ebbf9e7/","text":"&#x524D;&#x8A00;&#x6CA1;&#x5565;&#x60F3;&#x8BF4;&#x7684;&#x3002; &#x9898;&#x76EE;&#x539F;&#x9898;&#x94FE;&#x63A5; click here &#x5199;&#x4E00;&#x5199;&#x53D1;&#x73B0;&#x524D;&#x7F00;&#x79EF;&#x4E0E;m&#x7684;gcd&#x662F;&#x4E00;&#x4E2A;&#x9012;&#x589E;&#x7684;&#x5173;&#x7CFB;,&#x4F9D;&#x6B21;&#x4E3A;&#x500D;&#x6570;&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x5C06;0&#x223C;m&#x2212;1&#x6309;&#x7167;&#x4E0E;m&#x7684;gcd&#x5206;&#x7C7B;&#x7136;&#x540E;&#x5C31;&#x662F;&#x5728;&#x62D3;&#x6251;&#x56FE;&#x4E0A;&#x641E;&#x4E00;&#x641E;DP,&#x8F93;&#x51FA;&#x7684;&#x65F6;&#x5019;&#x7528;&#x62D3;&#x5C55;&#x6B27;&#x51E0;&#x91CC;&#x5F97;&#x6C42;&#x4E00;&#x53D1;&#x9006;&#x5143;&#x603B;&#x7684;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;:O(nlogn) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778#include&lt;iostream&gt;#include&lt;vector&gt;#define LL long longusing namespace std; const int N = 5000000;const int M = 10000; int n,m,tot,ans,vis[N],id[N],in[M],num[M];int head[M],nxt[N],to[N],f[M],itr[M];vector&lt;int&gt; que[M],vout; inline int read() { char c=getchar(); int f=1,ret=0; while (c&lt;&apos;0&apos;||c&gt;&apos;9&apos;) {if(c==&apos;-&apos;)f=-1;c=getchar();} while (c&lt;=&apos;9&apos;&amp;&amp;c&gt;=&apos;0&apos;) {ret=ret*10+c-&apos;0&apos;;c=getchar();} return ret * f;} int gcd(int a, int b) { return b? gcd(b, a%b): a;} inline void AddEdge(int u, int v) { static int E = 1; in[u]++; to[++E] = u; nxt[E] = head[v]; head[v] = E;} void solve(int w) { f[w] = que[w].size() + (itr[w]?f[itr[w]]:0); ans = max(ans, f[w]); for (int i=head[w];i;i=nxt[i]) { if (f[w] &gt; f[itr[to[i]]]) itr[to[i]] = w; if (--in[to[i]] == 0) solve(to[i]); }} void exgcd(int a, int b, LL &amp;x, LL &amp;y) { if (b) {exgcd(b, a%b, y, x); y -= a / b * x;} else {x = 1; y = 0;}} inline int REV(int a, int z) { int tmp = gcd(a, m), b; LL x, y; a /= tmp; z /= tmp; b = m / tmp; exgcd(a, b, x, y); return x * z % m;} void print(int w, int v) { for (int i=0;i&lt;=que[w].size()-1;i++) { int nv = que[w][i], rev = REV(v, nv); vout.push_back((rev+m)%m); v = nv; } if (itr[w]) print(itr[w], v);} int main() { n = read(); m = read(); for (int i=1;i&lt;=n;i++) vis[read()] = 1; for (int i=1;i&lt;m;i++) if (!vis[i]) { int tmp = gcd(m, i); if (!id[tmp]) id[tmp] = ++tot, num[tot] = tmp; que[id[tmp]].push_back(i); } for (int i=1;i&lt;=tot;i++) { for (int j=1;j&lt;=tot;j++) { if (num[j] &gt; num[i] &amp;&amp; num[j] % num[i] == 0) { AddEdge(i, j); } } } for (int i=1;i&lt;=tot;i++) if (!in[i]) solve(i); for (int i=1;i&lt;=tot;i++) if (f[i] == ans) {print(i, 1); break;} if (!vis[0]) vout.push_back(0); cout&lt;&lt;vout.size()&lt;&lt;endl; for (int i=0;i&lt;=vout.size()-1;i++) printf(&quot;%d &quot;,vout[i]); return 0;} END document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","excerpt":"","tags":[{"name":"ACM","slug":"ACM","permalink":"http://molingu.top/tags/ACM/"}]},{"title":"win10中邮箱添加并同步gmail问题","date":"2018-12-01T02:21:30.000Z","path":"/posts/91e68c3d/","text":"&#x524D;&#x8A00; &#x4E4B;&#x524D;&#x6253;&#x7B97;&#x5728;win10&#x81EA;&#x5E26;&#x7684;&#x90AE;&#x7BB1;&#x91CC;&#x628A;gmail&#x90AE;&#x7BB1;&#x7ED9;&#x6DFB;&#x52A0;&#x8FDB;&#x53BB;&#xFF0C;&#x8FD9;&#x6837;&#x4EE5;&#x540E;&#x67E5;&#x770B;&#x90AE;&#x7BB1;&#x65F6;&#x5C31;&#x65B9;&#x4FBF;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#xFF0C;&#xFF0C;&#xFF0C;&#x6DFB;&#x52A0;&#x4E0D;&#x8FDB;&#x53BB;&#xFF01; &#x4E8E;&#x662F;&#x4FBF;&#x5BFB;&#x627E;&#x4E86;&#x4E00;&#x4E0B;&#x89E3;&#x51B3;&#x7684;&#x529E;&#x6CD5;&#xFF0C;&#x65B9;&#x6CD5;&#x4E0D;&#x5C11;&#xFF0C;&#x6211;&#x5C31;&#x8BB0;&#x5F55;&#x4E00;&#x4E2A;&#x6211;&#x8BA4;&#x4E3A;&#x6700;&#x7B80;&#x5355;&#x7684;&#x5427; &#x89E3;&#x51B3;&#x65B9;&#x6CD5; &#x5148;&#x4EE5;&#x7BA1;&#x7406;&#x5458;&#x7684;&#x8EAB;&#x4EFD;&#x8FD0;&#x884C;cmd&#xFF08;&#x53EF;&#x4EE5;&#x5728;Cortana&#x4E2D;&#x8F93;&#x5165;cmd&#x7136;&#x540E;&#x53F3;&#x952E;&#xFF09; &#x8F93;&#x5165;&#x547D;&#x4EE4;&#x5E76;&#x8FD0;&#x884C;&#xFF1A; CheckNetIsolation.exe LoopbackExempt -a -p=S-1-15-2-2551677095-2355568638-4209445997-2436930744-3692183382-387691378-1866284433 CheckNetIsolation.exe LoopbackExempt -a -p=S-1-15-2-2750798217-1343590035-1234819260-1030354384-3318145141-3720257911-3461195215 &#x6B64;&#x65B9;&#x6CD5;&#x6765;&#x81EA;&#x77E5;&#x4E4E;&#x3002; &#x4F5C;&#x8005;&#xFF1A;&#x77E5;&#x4E4E;&#x7528;&#x6237;-&gt;&#x67E5;&#x770B;&#x539F;&#x56DE;&#x7B54;&lt;- &#x540E;&#x8BB0; &#x8FD8;&#x662F;&#x8001;&#x8BDD;&#xFF0C;&#x4EC5;&#x8BB0;&#x5F55;&#x4E3A;&#x5907;&#x5FD8;&#xFF0C;&#x5982;&#x679C;&#x8C01;&#x4E0D;&#x5C0F;&#x5FC3;&#x770B;&#x5230;&#x4E86;&#xFF0C;&#x90A3;&#x5C31;&#x770B;&#x5230;&#x4E86;&#x5427;&#x3002;&#x3002;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","excerpt":"","tags":[{"name":"Win10","slug":"Win10","permalink":"http://molingu.top/tags/Win10/"}]},{"title":"Linux中MySQL无法登录的解决方案","date":"2018-11-29T09:12:43.000Z","path":"/posts/ba21823f/","text":"&#x524D;&#x8A00;&#x95EE;&#x9898; &#x5728;Linux&#x4E0A;&#x4F7F;&#x7528;MySQL&#x9047;&#x5230;&#x4E86;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#xFF0C;&#x603B;&#x800C;&#x8A00;&#x4E4B;&#x5C31;&#x662F;&#x65E0;&#x6CD5;&#x767B;&#x5F55;&#xFF0C;&#x62A5;&#x9519;&#x4FE1;&#x606F;&#x5C31;&#x957F;&#x8FD9;&#x6837;&#xFF1A; Access denied for user &apos;root&apos;@&apos;localhost&apos; (using password: NO) &#x7136;&#x540E;&#x8FD8;&#x6709;&#x90A3;&#x79CD;&#x9700;&#x8981;&#x8F93;&#x5165;&#x5BC6;&#x7801;&#x4F46;&#x662F;&#x4F60;&#x5374;&#x4E0D;&#x77E5;&#x9053;&#x5BC6;&#x7801;&#x662F;&#x5565;&#x7684;&#x4E5F;&#x53EF;&#x4EE5;&#x7528;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x3002; &#x7136;&#x540E;&#x5C1D;&#x8BD5;&#x4E86;&#x5404;&#x79CD;&#x529E;&#x6CD5;&#xFF0C;&#x627E;&#x5230;&#x4E86;&#x4E00;&#x4E2A;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x3002; &#x7F51;&#x4E0A;&#x8FD8;&#x6709;&#x4E0D;&#x5C11;&#x65B9;&#x6CD5;&#xFF0C;&#x4E0D;&#x8FC7;&#x6211;&#x7528;&#x4E0D;&#x4E86;&#x5C31;&#x662F;&#x4E86;&#x3002; &#x89E3;&#x51B3;&#x65B9;&#x6848; &#x7528;vim&#x6253;&#x5F00;&#x5728;/etc/mysql/my.cnf&#x4E2D;&#x6DFB;&#x52A0;&#x8FD9;&#x6837;&#x4E00;&#x53E5;&#xFF1A; [mysqld] skip-grant-tables &#x8FD9;&#x6837;&#x505A;&#x662F;&#x4E3A;&#x4E86;&#x8FDB;&#x5165;mysql&#x63A7;&#x5236;&#x53F0;&#x800C;&#x4E0D;&#x9700;&#x8981;&#x5BC6;&#x7801;&#x3002;&#x7136;&#x540E;&#x91CD;&#x542F;: sudo service mysql restart &#x8FDB;&#x5165;mysql&#xFF1A; mysql -u root &#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x91CD;&#x7F6E;&#x7528;&#x6237;&#x5BC6;&#x7801;&#xFF0C;&#x8FD9;&#x91CC;&#x5BC6;&#x7801;&#x8BBE;&#x7F6E;&#x6210;&#x4E86;root&#xFF0C;&#x53EF;&#x4EE5;&#x6539;&#x6210;&#x522B;&#x7684;&#xFF0C;&#x968F;&#x610F;: UPDATE mysql.user SET authentication_string=PASSWORD(&apos;root&apos;), plugin=&apos;mysql_native_password&apos; WHERE User=&apos;root&apos; AND Host=&apos;localhost&apos;;FLUSH PRIVILEGES; &#x8F93;&#x5165;\\q&#x9000;&#x51FA;&#xFF0C;&#x518D;&#x6B21;&#x6253;&#x5F00;/etc/mysql/my.cnf,&#x5C06;&#x521A;&#x521A;&#x6DFB;&#x52A0;&#x7684;&#x8BED;&#x53E5;&#x5220;&#x9664;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x6B21;&#x91CD;&#x542F;&#xFF1A; sudo service mysql restart &#x8F93;&#x5165;mysql -u root -p&#x767B;&#x5F55;&#x5C31;&#x597D;&#x4E86;&#x3002; &#x7ED3;&#x8BED; &#x5982;&#x679C;&#x4E0D;&#x884C;&#x7684;&#x8BDD;&#x90A3;&#x5C31;&#x518D;&#x53E6;&#x5BFB;&#x826F;&#x65B9;&#x5427;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","excerpt":"","tags":[{"name":"Linux MySQL","slug":"Linux-MySQL","permalink":"http://molingu.top/tags/Linux-MySQL/"}]},{"title":"关于POJ2018求字串最大平均值问题","date":"2018-11-10T07:58:56.000Z","path":"/posts/c5834a0e/","text":"&#x539F;&#x9898;&#x94FE;&#x63A5;&#xFF1A;Click here&#x524D;&#x8A00;&#x8FD9;&#x4E00;&#x9898;&#x7684;&#x4E3B;&#x8981;&#x9898;&#x610F;&#x5C31;&#x662F;&#x7ED9;&#x5B9A;&#x4E00;&#x7EC4;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x6C42;&#x5927;&#x4E8E;&#x7B49;&#x4E8E;k&#x7684;&#x8FDE;&#x7EED;&#x5B50;&#x4E32;&#x7684;&#x6700;&#x5927;&#x5E73;&#x5747;&#x503C;&#x3002;&#x9898;&#x76EE;&#x5012;&#x4E0D;&#x662F;&#x5F88;&#x96BE;&#xFF0C;&#x60F3;&#x8D77;&#x6765;&#x4E5F;&#x4E0D;&#x662F;&#x5F88;&#x590D;&#x6742;&#x3002; &#x4E00;&#x5F00;&#x59CB;&#x6211;&#x7684;&#x60F3;&#x6CD5;&#x5C31;&#x662F;&#x5148;&#x6C42;&#x51FA;&#x957F;&#x5EA6;&#x4E3A;k&#x7684;&#x5B57;&#x4E32;&#x7684;&#x6700;&#x5927;&#x5E73;&#x5747;&#x503C;&#xFF0C;&#x7136;&#x540E;&#x8BB0;&#x5F55;&#x4E0B;&#x5B57;&#x4E32;&#x7684;&#x8FB9;&#x754C;l&#x548C;r&#xFF0C;&#x7136;&#x540E;&#x5411;&#x4E24;&#x8FB9;&#x6269;&#x5C55;&#x3002;&#x5728;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x4E2D;&#x8FD8;&#x4F1A;&#x9047;&#x5230;&#x4E00;&#x79CD;&#x60C5;&#x51B5;&#x5C31;&#x662F;&#x51FA;&#x73B0;&#x4E24;&#x4E2A;&#x76F8;&#x540C;&#x7684;&#x5B57;&#x4E32;&#x5E73;&#x5747;&#x503C;&#x90FD;&#x662F;&#x6700;&#x5927;&#xFF0C;&#x8FD9;&#x6837;&#x5E94;&#x8BE5;&#x5BF9;&#x8FD9;&#x4E24;&#x4E2A;&#x5B57;&#x4E32;&#x90FD;&#x8981;&#x6269;&#x5C55;&#x3002; &#x60F3;&#x597D;&#x4E86;&#x5C31;&#x5F00;&#x59CB;&#x5199;&#x3002;&#x3002;&#x3002;&#x7136;&#x540E;&#x5C31;&#x6CA1;&#x5199;&#x51FA;&#x6765;(&#x771F;&#x7684;&#x592A;&#x83DC;&#x4E86;)&#x3002; &#x6240;&#x4EE5;&#x4E0B;&#x9762;&#x5C31;&#x662F;&#x7F51;&#x4E0A;&#x5927;&#x795E;&#x7684;&#x89E3;&#x6CD5;&#x3002;&#x3002;&#x3002; &#x4EE3;&#x7801;&#x5B9E;&#x73B0; &#x7F51;&#x4E0A;&#x5927;&#x4F6C;&#x7684;&#x505A;&#x6CD5;&#xFF0C;&#x53EA;&#x80FD;&#x8BF4;&#x5B9E;&#x5728;&#x662F;&#x60F3;&#x4E0D;&#x5230;&#x8FD8;&#x6709;&#x8FD9;&#x6837;&#x7684;&#x505A;&#x6CD5;&#x3002;&#x62FF;&#x6765;&#x53C2;&#x8003;&#x4E00;&#x4E0B;&#x3002; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566#include &lt;cstdio&gt;#include &lt;cmath&gt;const int maxn = 100100;//&#x8F93;&#x5165;&#x4F18;&#x5316;char ch;int scan(){ while( ch = getchar(), ch &lt; &apos;0&apos; || ch &gt; &apos;9&apos; ); int res = ch - &apos;0&apos;; while( ch = getchar(), ch &gt;= &apos;0&apos; &amp;&amp; ch &lt;= &apos;9&apos; ) res = res*10 + ch - &apos;0&apos;; return res;}int a[maxn];struct point{ double x, y;}p[maxn], queue[maxn];//&#x53C9;&#x4E58;double cross( point&amp; p0, point&amp; p1, point&amp; p2 ){ return (p1.x-p0.x)*(p2.y-p0.y) - (p2.x-p0.x)*(p1.y-p0.y);}//&#x83B7;&#x53D6;&#x4E24;&#x70B9;&#x7684;&#x659C;&#x7387;double getk( point&amp; aa, point&amp; bb ){ return (bb.y-aa.y)/(bb.x-aa.x);}int main (){ int i, j, N, F, size; double ans; while(scanf(&quot;%d %d&quot;, &amp;N, &amp;F)==2){ p[0].y = p[0].x = 0; for( i = 1; i &lt;= N; ++i ) { p[i].y = scan() + p[i - 1].y; p[i].x = i; } size = 0; ans = -1.0; int ll, rr, mid; for( i = F; i &lt;= N; ++i ) { point newp = p[i - F]; //&#x7C7B;&#x4F3C;&#x51F8;&#x5305;&#x7684;&#x6784;&#x9020;&#xFF0C;&#x6784;&#x9020;&#x4E00;&#x4E2A;&#x4E0B;&#x51F9;&#x7684;&#x66F2;&#x7EBF; while( size &gt;= 2 &amp;&amp; cross(queue[size-2], queue[size-1], newp) &lt; 0 ) --size; queue[size++] = newp; //&#x4E8C;&#x5206;&#x67E5;&#x627E; ll = 0; rr = size; while( rr - ll &gt; 1 ) { mid = (ll+rr)/2; if( cross(queue[mid-1], p[i], queue[mid]) &gt; 0 ) rr = mid; else ll = mid; } if( ans &lt; getk(queue[ll], p[i]) ) ans = getk(queue[ll], p[i]); } printf(&quot;%d&quot;, (int)(ans*1000)); } return 0;} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","excerpt":"","tags":[{"name":"ACM","slug":"ACM","permalink":"http://molingu.top/tags/ACM/"}]},{"title":"关于Poj1659的可图问题","date":"2018-11-07T05:08:26.000Z","path":"/posts/c17a2590/","text":"&#x539F;&#x9898;&#x94FE;&#x63A5;&#xFF1A;Click here&#x524D;&#x8A00; &#x4E00;&#x4E2A;&#x4E0D;&#x7B97;&#x5F88;&#x590D;&#x6742;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x53EA;&#x8981;&#x77E5;&#x9053;Havel-Hakimi&#x5B9A;&#x7406;&#x5C31;&#x597D;&#x4E86;(&#x524D;&#x4EBA;&#x5DF2;&#x7ECF;&#x628A;&#x8DEF;&#x5F00;&#x597D;&#x4E86;)&#x3002; &#x4EE3;&#x7801;&#x5B9E;&#x73B0; &#x81EA;&#x5DF1;&#x5199;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;&#x5F88;&#x7B28;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x6240;&#x4EE5;&#x4EC5;&#x4F9B;&#x53C2;&#x8003;&#x5566;(&#x81F3;&#x5C11;&#x80FD;&#x8FC7;)&#x3002;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990#include&lt;iostream&gt;#include&lt;algorithm&gt;#include&lt;cstring&gt;using namespace std;void sot(int *a,int *b,int m){ //&#x6570;&#x636E;&#x4E0D;&#x5927;&#xFF0C;&#x76F4;&#x63A5;&#x5192;&#x6CE1; //&#x540C;&#x65F6;&#x5BF9;&#x7D22;&#x5F15;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#xFF0C;&#x65B9;&#x4FBF;&#x8BA1;&#x7B97; for(int i=0;i&lt;m;i++){ for(int j=0;j&lt;m-i-1;j++){ if(a[j]&gt;=a[j+1]){ int c; c=a[j]; a[j]=a[j+1]; a[j+1]=c; c=b[j]; b[j]=b[j+1]; b[j+1]=c; } } }}void judge(int *a,int* b,int **c,int m,int &amp;flag){ //&#x6839;&#x636E;Havel-Hakimi&#x5B9A;&#x7406;,&#x6709;&#x8D1F;&#x503C;&#x65F6;&#x5219;&#x4E0D;&#x53EF;&#x56FE;&#x3002; for(int i=0;i&lt;m;i++){ if(a[i]&lt;0){ cout&lt;&lt;&quot;NO&quot;&lt;&lt;endl; flag=0; return ; } } //&#x76F4;&#x63A5;&#x5224;&#x65AD;&#x5230;&#x6700;&#x540E; if(m==0){ cout&lt;&lt;&quot;YES&quot;&lt;&lt;endl; flag=1; return ; } sot(a,b,m);//&#x6392;&#x5E8F;&#x8FDB;&#x884C;&#x5224;&#x65AD; int i=m-1; int cur=i-1; //&#x6309;&#x7167;&#x516C;&#x5F0F;&#x64CD;&#x4F5C; for(int j=a[i];j&gt;0;j--){ a[cur]-=1; c[b[i]][b[cur]]=1; c[b[cur]][b[i]]=1; cur--; a[i]=0; } judge(a,b,c,m-1,flag);//&#x9012;&#x5F52;}void make(int* a,int m){ int *Lake[m];//&#x65B9;&#x4FBF;&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;&#x4F20;&#x503C; int mm[m][m]; memset(Lake,0,sizeof(Lake)); memset(mm,0,sizeof(mm)); int b[m]; for(int i=0;i&lt;m;i++){ b[i]=i; Lake[i]=mm[i]; } sot(a,b,m); int flag; judge(a,b,Lake,m,flag); //&#x5982;&#x679C;&#x53EF;&#x56FE;&#xFF0C;&#x8F93;&#x51FA;&#x56FE; if(flag){ for(int i=0;i&lt;m;i++){ for(int j=0;j&lt;m;j++) cout&lt;&lt;Lake[i][j]&lt;&lt;&apos; &apos;; cout&lt;&lt;endl; } } cout&lt;&lt;endl;}int main(){ int n; while(cin&gt;&gt;n){ while(n--){ int m; cin&gt;&gt;m; int a[m]; for(int i=0;i&lt;m;i++) cin&gt;&gt;a[i]; make(a,m); } } return 0;} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","excerpt":"","tags":[{"name":"ACM","slug":"ACM","permalink":"http://molingu.top/tags/ACM/"}]},{"title":"MarkDown个人总结","date":"2018-10-31T11:23:18.000Z","path":"/posts/60d5adf4/","text":"&#x4ECB;&#x7ECD; Markdown&#x662F;&#x4E00;&#x79CD;&#x8F7B;&#x91CF;&#x7EA7;&#x6807;&#x8BB0;&#x8BED;&#x8A00;&#xFF0C;&#x5B83;&#x4EE5;&#x7EAF;&#x6587;&#x672C;&#x5F62;&#x5F0F;(&#x6613;&#x8BFB;&#x3001;&#x6613;&#x5199;&#x3001;&#x6613;&#x66F4;&#x6539;)&#x7F16;&#x5199;&#x6587;&#x6863;&#xFF0C;&#x5E76;&#x6700;&#x7EC8;&#x4EE5;HTML&#x683C;&#x5F0F;&#x53D1;&#x5E03;&#x3002;Markdown&#x4E5F;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x5C06;&#x4EE5;MARKDOWN&#x8BED;&#x6CD5;&#x7F16;&#x5199;&#x7684;&#x8BED;&#x8A00;&#x8F6C;&#x6362;&#x6210;HTML&#x5185;&#x5BB9;&#x7684;&#x5DE5;&#x5177;&#x3002; MarkDown&#x597D;&#x5904;&#x90FD;&#x6709;&#x5565;&#xFF1F; &#x5B83;&#x662F;&#x6613;&#x8BFB;&#xFF08;&#x770B;&#x8D77;&#x6765;&#x8212;&#x670D;&#xFF09;&#x3001;&#x6613;&#x5199;&#xFF08;&#x8BED;&#x6CD5;&#x7B80;&#x5355;&#xFF09;&#x3001;&#x6613;&#x66F4;&#x6539;&#x7684;&#x7EAF;&#x6587;&#x672C;&#x3002;&#x5904;&#x5904;&#x4F53;&#x73B0;&#x7740;&#x6781;&#x7B80;&#x4E3B;&#x4E49;&#x7684;&#x5F71;&#x5B50;&#x3002; &#x517C;&#x5BB9;HTML&#xFF0C;&#x53EF;&#x4EE5;&#x8F6C;&#x6362;&#x4E3A;HTML&#x683C;&#x5F0F;&#x53D1;&#x5E03;&#x3002; &#x8DE8;&#x5E73;&#x53F0;&#x4F7F;&#x7528;&#x3002; &#x8D8A;&#x6765;&#x8D8A;&#x591A;&#x7684;&#x7F51;&#x7AD9;&#x652F;&#x6301;Markdown&#x3002; &#x66F4;&#x65B9;&#x4FBF;&#x6E05;&#x6670;&#x5730;&#x7EC4;&#x7EC7;&#x4F60;&#x7684;&#x7535;&#x5B50;&#x90AE;&#x4EF6;&#x3002;&#xFF08;Markdown-here, Airmail&#xFF09; &#x7EC3;&#x4E60;&#x7F51;&#x7AD9;&#xFF1A;Click Here &#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x5728;&#x7EBF;&#x7684;&#x7EC3;&#x4E60;&#x7F51;&#x7AD9;&#xFF0C;&#x53EF;&#x4EE5;&#x8FB9;&#x5B66;&#x8FB9;&#x7EC3;&#xFF0C;&#x8FD8;&#x662F;&#x5F88;&#x68D2;&#x7684;&#x3002; 1. &#x659C;&#x4F53;&#x659C;&#x4F53;&#x7684;&#x8868;&#x793A;&#x65B9;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A; *&#x659C;&#x4F53;* &#x6548;&#x679C;&#x5982;&#x4E0B;&#xFF1A; &#x659C;&#x4F53; 2. &#x7C97;&#x4F53;&#x7C97;&#x4F53;&#x7684;&#x8868;&#x793A;&#x65B9;&#x6CD5;&#x4E5F;&#x662F;&#x4E24;&#x79CD;&#xFF1A; __&#x7C97;&#x4F53;__ **&#x7C97;&#x4F53;** &#x6548;&#x679C;&#x5982;&#x4E0B;&#xFF1A; &#x7C97;&#x4F53;&#x7C97;&#x4F53; 3. &#x6807;&#x9898;1. &#x5728;&#x6587;&#x5B57;&#x524D;&#x4F7F;&#x7528;&#x7B26;&#x53F7;#&#x6765;&#x6DFB;&#x52A0;&#x6807;&#x9898;&#x3002;&#x5982;&#xFF1A; # &#x4E00;&#x7EA7;&#x6807;&#x9898; ## &#x4E8C;&#x7EA7;&#x6807;&#x9898; ### &#x4E09;&#x7EA7;&#x6807;&#x9898; #### &#x56DB;&#x7EA7;&#x6807;&#x9898; ##### &#x4E94;&#x7EA7;&#x6807;&#x9898; ###### &#x516D;&#x7EA7;&#x6807;&#x9898; 2. &#x4F7F;&#x7528;=&#x548C;-&#x6807;&#x8BB0;&#x4E00;&#x7EA7;&#x548C;&#x4E8C;&#x7EA7;&#x6807;&#x9898; &#x4E00;&#x7EA7;&#x6807;&#x9898; ========= &#x4E8C;&#x7EA7;&#x6807;&#x9898; --------- &#x8FD9;&#x91CC;&#x7684;&#x6548;&#x679C;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x5C1D;&#x8BD5;&#x4E00;&#x4E0B;&#x3002; 4. &#x6BB5;&#x843D;&#x6BB5;&#x843D;&#x7684;&#x524D;&#x540E;&#x8981;&#x6709;&#x7A7A;&#x884C;&#xFF0C;&#x6240;&#x8C13;&#x7684;&#x7A7A;&#x884C;&#x662F;&#x6307;&#x6CA1;&#x6709;&#x6587;&#x5B57;&#x5185;&#x5BB9;&#x3002; &#x82E5;&#x60F3;&#x5728;&#x6BB5;&#x5185;&#x5F3A;&#x5236;&#x6362;&#x884C;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x4F7F;&#x7528;&#x4E24;&#x4E2A;&#x4EE5;&#x4E0A;&#x7A7A;&#x683C;&#x52A0;&#x4E0A;&#x56DE;&#x8F66;&#xFF08;&#x5F15;&#x7528;&#x4E2D;&#x6362;&#x884C;&#x7701;&#x7565;&#x56DE;&#x8F66;&#xFF09;&#x3002; &#x5426;&#x5219;&#x7684;&#x8BDD;&#x53EF;&#x80FD;&#x5C31;&#x662F;&#x957F;&#x957F;&#x7684;&#x4E00;&#x884C;&#x5B57;&#x3002; 5. &#x533A;&#x5757;&#x5F15;&#x7528;&#x5728;&#x6BB5;&#x843D;&#x7684;&#x6BCF;&#x884C;&#x6216;&#x8005;&#x53EA;&#x5728;&#x7B2C;&#x4E00;&#x884C;&#x4F7F;&#x7528;&#x7B26;&#x53F7;&gt;,&#x8FD8;&#x53EF;&#x4F7F;&#x7528;&#x591A;&#x4E2A;&#x5D4C;&#x5957;&#x5F15;&#x7528;&#xFF0C;&#x5982;&#xFF1A; &gt; &#x533A;&#x5757;&#x5F15;&#x7528; &gt;&gt; &#x5D4C;&#x5957;&#x5F15;&#x7528; &#x6548;&#x679C;&#x5982;&#x4E0B;&#xFF1A; &#x533A;&#x5757;&#x5F15;&#x7528; &#x5D4C;&#x5957;&#x5F15;&#x7528; 6. &#x94FE;&#x63A5;1. &#x4EE5;&#x5982;&#x4E0B;&#x7684;&#x5F62;&#x5F0F;&#x6DFB;&#x52A0;&#x94FE;&#x63A5;&#xFF1A; [&#x6211;&#x7684;&#x535A;&#x5BA2;](http://molingu.top/ &quot;gqzcl&#x7684;&#x535A;&#x5BA2;&quot;) &#x8FD9;&#x91CC;&#x6700;&#x540E;&#x5F15;&#x53F7;&#x4E2D;&#x7684;&#x662F;&#x5F53;&#x9F20;&#x6807;&#x60AC;&#x505C;&#x5728;&#x94FE;&#x63A5;&#x4E0A;&#x65F6;&#x7684;&#x63CF;&#x8FF0;&#x3002;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x4E0D;&#x5199;&#x3002; Tip: &#x5F15;&#x53F7;&#x4E4B;&#x524D;&#x8981;&#x52A0;&#x7A7A;&#x683C;&#x3002; &#x6548;&#x679C;&#x5982;&#x4E0B;&#xFF1A; &#x6B22;&#x8FCE;&#x6765;&#x5230;&#x6211;&#x7684;&#x535A;&#x5BA2; 2. &#x53E6;&#x4E00;&#x79CD;&#x6807;&#x7B7E;&#x5F0F;&#x7684;&#x94FE;&#x63A5;&#x65B9;&#x5F0F;&#xFF1A; [&#x6211;&#x7684;&#x535A;&#x5BA2;][&#x6807;&#x7B7E;1] [&#x6211;&#x7684;&#x535A;&#x5BA2;][&#x6807;&#x7B7E;2] [&#x6807;&#x7B7E;1]:http://molingu.top/ [&#x6807;&#x7B7E;2]:http://molingu.top/ &quot;gqzcl&#x7684;&#x535A;&#x5BA2;&quot; &#x6548;&#x679C;&#x5982;&#x4E0B;&#xFF1A; &#x6B22;&#x8FCE;&#x6765;&#x5230;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x6B22;&#x8FCE;&#x6765;&#x5230;&#x6211;&#x7684;&#x535A;&#x5BA2; &#x8FD9;&#x79CD;&#x5199;&#x6CD5;&#x7684;&#x597D;&#x5904;&#x662F;&#x5728;&#x591A;&#x6B21;&#x6DFB;&#x52A0;&#x65F6;&#x5F88;&#x65B9;&#x4FBF;&#x3002; 3. &#x81EA;&#x52A8;&#x94FE;&#x63A5; &#x76F4;&#x63A5;&#x7528;&lt;&gt;&#x5C06;&#x94FE;&#x63A5;&#x62EC;&#x8D77;&#x6765;&#x3002; &lt;http://molingu.top/&gt; http://molingu.top/ &#x8FD9;&#x4E2A;&#x6CA1;&#x5565;&#x7528;&#x3002;&#x3002;&#x3002;&#x4E0D;&#x62EC;&#x4E5F;&#x884C; 8. &#x56FE;&#x7247;&#x548C;&#x94FE;&#x63A5;&#x65B9;&#x5F0F;&#x5DEE;&#x4E0D;&#x591A;&#xFF0C;&#x5728;&#x5F00;&#x5934;&#x52A0;&#x4E2A;!&#x5C31;&#x884C;&#x3002; &#x56FE;&#x7247;&#x4E00;&#x822C;&#x90FD;&#x662F;&#x76F4;&#x63A5;&#x8D34;&#x94FE;&#x63A5;&#x7684;&#x3002; &#x628A;&#x4F60;&#x60F3;&#x8981;&#x5C55;&#x793A;&#x7684;&#x56FE;&#x7247;&#x653E;&#x5728;&#x56FE;&#x5E8A;&#x91CC;&#x5C31;&#x597D;&#x4E86;&#x3002; &#x56FE;&#x5E8A;&#x81EA;&#x5DF1;Google&#x5C31;&#x597D;&#x4E86;~.~&#x3002; 9. &#x4EE3;&#x7801;&#x7528;`&#x6765;&#x6807;&#x8BC6;&#xFF0C;&#x5C31;&#x662F;TAB&#x952E;&#x4E0A;&#x8FB9;&#x7684;&#x90A3;&#x4E2A;&#xFF1A; 1234#include&lt;iostream&gt;#include&lt;algorithm&gt;int main(){} &#x6548;&#x679C;&#x5982;&#x4E0B;&#xFF1A; 12345#include&lt;iostream&gt;#include&lt;algorithm&gt;int main(){} &#x8BED;&#x8A00;&#x8868;&#x793A;&#x53EF;&#x4EE5;&#x66F4;&#x6362;&#x76F4;&#x63A5;&#x5728;&#x4EE3;&#x7801;&#x524D;&#x52A0;&#x4E00;&#x4E2A;&#x5236;&#x8868;&#x7B26;&#x4E5F;&#x5DEE;&#x4E0D;&#x591A;(tab),&#x4E0D;&#x8FC7;&#x6CA1;&#x6709;&#x9AD8;&#x4EAE; 10. &#x8868;&#x683C;&#x5728;&#x8868;&#x683C;&#x7684;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x4E4B;&#x95F4;&#x4EE5;&#x201C;|&#x201D;&#x5206;&#x5272;&#xFF1B; &quot;---&quot;&#x4E3A;&#x5206;&#x5272;&#x7EBF;&#x3002; &#x793A;&#x4F8B;1&#xFF1A; First Header | Second Header | Third Header ------------ | ------------- | ------------ Content Cell | Content Cell | Content Cell Content Cell | Content Cell | Content Cell &#x8FD9;&#x4E2A;&#x662F;&#x5411;&#x5DE6;&#x5BF9;&#x9F50;(&#x9ED8;&#x8BA4;)&#x7684;&#x3002;&#x2018;&#x2013;&#x2019;&#x5C11;&#x5199;&#x51E0;&#x4E2A;&#x4E5F;&#x6CA1;&#x5173;&#x7CFB;&#xFF0C;&#x4E0D;&#x8FC7;&#x8FD9;&#x6837;&#x5199;&#x4F60;&#x81EA;&#x5DF1;&#x770B;&#x7740;&#x8212;&#x670D;(&#x4E0D;&#x662F;&#x5F3A;&#x8FEB;&#x75C7;&#x7684;&#x8868;&#x793A;&#x65E0;&#x6240;&#x8C13;) First Header Second Header Third Header Content Cell Content Cell Content Cell Content Cell Content Cell Content Cell &#x793A;&#x4F8B;2&#xFF1A; First Header | Second Header | Third Header :----------- | :-----------: | -----------: Left | Center | Right Left | Center | Right &#x8FD9;&#x4E2A;&#x662F;&#x5DE6;&#x53F3;&#x7684;&#x5206;&#x522B;&#x5DE6;&#x53F3;&#x5BF9;&#x9F50;&#xFF0C;&#x4E2D;&#x95F4;&#x7684;&#x5C45;&#x4E2D;&#x3002;&#x2018;:&#x2019;&#x653E;&#x5728;&#x90A3;&#x8FB9;&#x5C31;&#x5411;&#x90A3;&#x8FB9;&#x5BF9;&#x9F50;&#xFF0C;&#x4E24;&#x8FB9;&#x90FD;&#x6709;&#x5C31;&#x5C45;&#x4E2D;&#x5C31;&#x662F;&#x8FD9;&#x6837;&#xFF1A; First Header Second Header Third Header Left Center Right Left Center Right &#x2018;&#x2014;&#x2018;&#x5728;&#x6587;&#x7AE0;&#x4E2D;&#x4E5F;&#x662F;&#x5206;&#x5272;&#x7EBF;&#xFF0C;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x8BD5;&#x8BD5;&#x5176;&#x4ED6;&#x7684;&#x8FD8;&#x6709; &#x2018;***&#x2019;,&#x2019;___&#x2019;,&#x4E09;&#x4E2A;&#x4EE5;&#x4E0A;&#x5C31;&#x884C; &#x53CD;&#x659C;&#x6760;&#x2019;\\&#x2019;&#x8F6C;&#x4E49;&#xFF0C;&#x4F7F;&#x7279;&#x6B8A;&#x7B26;&#x53F7;&#x53D8;&#x6210;&#x666E;&#x901A;&#x7684;&#x7B26;&#x53F7;&#x3002; Tips&#x4E0D;&#x540C;&#x7684;Markdown&#x89E3;&#x91CA;&#x5668;&#x6216;&#x5DE5;&#x5177;&#x5BF9;&#x76F8;&#x5E94;&#x8BED;&#x6CD5;&#xFF08;&#x6269;&#x5C55;&#x8BED;&#x6CD5;&#xFF09;&#x7684;&#x89E3;&#x91CA;&#x6548;&#x679C;&#x4E0D;&#x5C3D;&#x76F8;&#x540C;&#xFF0C;&#x5177;&#x4F53;&#x53EF;&#x53C2;&#x89C1;&#x5DE5;&#x5177;&#x7684;&#x4F7F;&#x7528;&#x8BF4;&#x660E;&#x3002; &#x867D;&#x7136;&#x6709;&#x4EBA;&#x60F3;&#x51FA;&#x9762;&#x641E;&#x4E00;&#x4E2A;&#x6240;&#x8C13;&#x7684;&#x6807;&#x51C6;&#x5316;&#x7684;Markdown&#xFF0C;[&#x6CA1;&#x60F3;&#x5230;&#x8FD8;&#x60F9;&#x6012;&#x4E86;&#x5065;&#x5728;&#x7684;&#x521B;&#x59CB;&#x4EBA;John Gruber] &#x4E00;&#x4E9B;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7684;&#x5730;&#x65B9; Chrome&#x4E0B;&#x7684;&#x63D2;&#x4EF6;&#x5982;stackedit&#x4E0E;markdown-here&#x7B49;&#x975E;&#x5E38;&#x65B9;&#x4FBF;&#x3002; &#x5728;&#x7EBF;&#x7684;dillinger.io&#x4E5F;&#x4E0D;&#x9519;&#x3002; Windowns&#x4E0B;&#x7684;MarkdownPad&#x3002; Mac&#x4E0B;&#x7684;Mou&#x662F;&#x56FD;&#x4EBA;&#x8D21;&#x732E;&#x7684;&#xFF0C;&#x53E3;&#x7891;&#x5F88;&#x597D;&#x3002; Linux&#x4E0B;&#x7684;ReText&#x4E0D;&#x9519;&#x3002; &#x5C0F;&#x7ED3; &#x6587;&#x7AE0;&#x4ECB;&#x7ECD;&#x7684;&#x4E5F;&#x4E0D;&#x7B97;&#x5F88;&#x5168;&#x9762;&#xFF0C;&#x4E0D;&#x8FC7;&#x9A6C;&#x9A6C;&#x864E;&#x864E;&#x5566;&#x3002;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;Google&#x4E00;&#x4E0B;&#x518D;&#x770B;&#x770B;(&#x867D;&#x7136;&#x6211;&#x89C9;&#x5F97;&#x5DEE;&#x4E0D;&#x591A;&#x591F;&#x7528;&#x4E86;)&#x3002;&#x5982;&#x679C;&#x6709;&#x6548;&#x679C;&#x548C;&#x6211;&#x5C55;&#x793A;&#x7684;&#x4E0D;&#x540C;&#xFF0C;&#x90A3;&#x4E00;&#x5B9A;&#x662F;&#x4F60;&#x51FA;&#x95EE;&#x9898;&#x4E86;(&#x6ED1;&#x7A3D;),&#x5176;&#x5B9E;&#x53EF;&#x80FD;&#x662F;&#x89E3;&#x91CA;&#x5668;&#x4E4B;&#x95F4;&#x7684;&#x5DEE;&#x5F02;&#x3002;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x778E;&#x8BD5;&#x8BD5;&#xFF0C;&#x8BF4;&#x4E0D;&#x5B9A;&#x6709;&#x4E9B;&#x4E0D;&#x540C;&#x7684;&#x66FF;&#x4EE3;&#x7528;&#x6CD5;(&#x6211;&#x5C31;&#x53D1;&#x73B0;&#x4E86;&#x597D;&#x51E0;&#x4E2A;&#xFF0C;&#x4E0D;&#x8FC7;&#x6211;&#x6CA1;&#x8BF4;&#xFF0C;&#x53EF;&#x80FD;&#x662F;&#x89E3;&#x91CA;&#x5668;&#x7684;&#x95EE;&#x9898;)&#x3002;&#x6700;&#x540E;&#xFF0C;&#x5C3D;&#x91CF;&#x6309;&#x7167;&#x6807;&#x51C6;&#x6765;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","excerpt":"","tags":[{"name":"MarkDown","slug":"MarkDown","permalink":"http://molingu.top/tags/MarkDown/"}]},{"title":"区间最值_线段树","date":"2018-10-28T08:37:49.000Z","path":"/posts/c99feae6/","text":"excerpt: &#x521D;&#x8BC6;&#x7EBF;&#x6BB5;&#x6811; &#x539F;&#x9898;&#x94FE;&#x63A5;&#xFF1A;Click here&#x524D;&#x8A00;&#x524D;&#x51E0;&#x5929;&#x4E0A;&#x8BFE;&#x521A;&#x521A;&#x5B66;&#x4E86;&#x7EBF;&#x6BB5;&#x6811;&#xFF0C;&#x8BFE;&#x4E0A;&#x5E03;&#x7F6E;&#x4E86;&#x8FD9;&#x4E2A;&#x9898;&#x76EE;&#x3002;&#x8BF4;&#x5B9E;&#x8BDD;&#xFF0C;&#x521A;&#x770B;&#x5230;&#x8FD9;&#x4E2A;&#x9898;&#x76EE;&#x7684;&#x65F6;&#x5019;&#x6211;&#x7684;&#x7B2C;&#x4E00;&#x53CD;&#x5E94;&#x5C31;&#x662F;&#x6570;&#x7EC4;&#x904D;&#x5386;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x6700;&#x5927;&#x503C;&#x6700;&#x5C0F;&#x503C;&#x5B58;&#x50A8;&#x8D77;&#x6765;&#x3002;&#x4E0D;&#x8FC7;&#x9898;&#x76EE;&#x80AF;&#x5B9A;&#x6CA1;&#x8FD9;&#x4E48;&#x7B80;&#x5355;&#xFF0C;&#x800C;&#x4E14;&#x6700;&#x5173;&#x952E;&#x7684;&#x662F;&#x6700;&#x4E0A;&#x9762;&#x6E05;&#x6E05;&#x695A;&#x695A;&#x7684;&#x5199;&#x7740;&#x7EBF;&#x6BB5;&#x6811;&#xFF0C;&#x90A3;&#x4E48;&#x597D;&#x5427;&#xFF0C;&#x90A3;&#x5C31;&#x7EBF;&#x6BB5;&#x6811;&#x3002;&#x7EBF;&#x6BB5;&#x6811;&#x4E4B;&#x524D;&#x5012;&#x4E5F;&#x662F;&#x542C;&#x8BF4;&#x8FC7;&#xFF0C;&#x4F46;&#x662F;&#x6CA1;&#x6709;&#x53BB;&#x4ED4;&#x7EC6;&#x7684;&#x4E86;&#x89E3;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x770B;&#x5230;&#x65F6;&#x662F;&#x4E00;&#x8138;&#x61F5;&#x903C;&#xFF0C;&#x6CA1;&#x6709;&#x529E;&#x6CD5;&#xFF0C;&#x4E0D;&#x4F1A;&#x4E5F;&#x4E0D;&#x53EF;&#x80FD;&#x81EA;&#x5DF1;&#x95ED;&#x95E8;&#x9020;&#x8F6E;&#x5B50;&#x7684;&#x5427;&#xFF0C;&#x4E8E;&#x662F;&#x6211;&#x5C31;&#x4E0A;&#x7F51;&#x67E5;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;&#x53D1;&#x73B0;&#x7EBF;&#x6BB5;&#x6811;&#x4E3B;&#x8981;&#x5C31;&#x662F;&#x6C42;&#x533A;&#x95F4;&#x7684;&#x548C;&#x6216;&#x8005;&#x6700;&#x503C;&#x95EE;&#x9898;&#x7684;&#xFF0C;&#x7EBF;&#x6BB5;&#x6811;&#x7684;&#x539F;&#x7406;&#x5C31;&#x662F;&#x5C06;[1,n]&#x5206;&#x89E3;&#x6210;&#x82E5;&#x5E72;&#x7279;&#x5B9A;&#x7684;&#x5B50;&#x533A;&#x95F4;(&#x6570;&#x91CF;&#x4E0D;&#x8D85;&#x8FC7;4*n),&#x7136;&#x540E;&#x5C06;&#x6BCF;&#x4E2A;&#x533A;&#x95F4;[L,R]&#x5206;&#x89E3;&#x8F83;&#x5C11;&#x5B50;&#x533A;&#x95F4;&#xFF0C;&#x901A;&#x8FC7;&#x5BF9;&#x5B50;&#x533A;&#x95F4;&#x7684;&#x4FEE;&#x6539;&#x548C;&#x7EDF;&#x8BA1;&#xFF0C;&#x6765;&#x5B9E;&#x73B0;&#x5FEB;&#x901F;&#x5BF9;[L,R]&#x7684;&#x4FEE;&#x6539;&#x6216;&#x8005;&#x7EDF;&#x8BA1;&#xFF0C;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x90FD;&#x662F;O(log2(n))&#x3002; &#x5E94;&#x7528;&#x7528;&#x7EBF;&#x6BB5;&#x6811;&#x7EDF;&#x8BA1;&#x7684;&#x4E1C;&#x897F;&#x5FC5;&#x987B;&#x7B26;&#x5408;&#x533A;&#x95F4;&#x52A0;&#x6CD5;&#xFF1A; &#x6570;&#x5B57;&#x4E4B;&#x548C;&#x2014;&#x2014;&#x603B;&#x6570;&#x5B57;&#x4E4B;&#x548C; = &#x5DE6;&#x533A;&#x95F4;&#x6570;&#x5B57;&#x4E4B;&#x548C; + &#x53F3;&#x533A;&#x95F4;&#x6570;&#x5B57;&#x4E4B;&#x548C; &#x6700;&#x5927;&#x516C;&#x56E0;&#x6570;(GCD)&#x2014;&#x2014;&#x603B;GCD = gcd( &#x5DE6;&#x533A;&#x95F4;GCD , &#x53F3;&#x533A;&#x95F4;GCD ); &#x6700;&#x5927;&#x503C;&#x2014;&#x2014;&#x603B;&#x6700;&#x5927;&#x503C;=max(&#x5DE6;&#x533A;&#x95F4;&#x6700;&#x5927;&#x503C;&#xFF0C;&#x53F3;&#x533A;&#x95F4;&#x6700;&#x5927;&#x503C;) &#x4EE3;&#x7801;&#x5B9E;&#x73B0;&#x7531;&#x4E8E;&#x5728;&#x7F51;&#x4E0A;&#x770B;&#x5230;&#x9898;&#x76EE;&#x5927;&#x591A;&#x90FD;&#x662F;&#x8FD9;&#x4E00;&#x9898;&#xFF0C;&#xFF0C;&#xFF0C; &#x662F;&#x6709;&#x4E9B;&#x5148;&#x5165;&#x4E3A;&#x4E3B;&#x5566;&#xFF0C;&#x4E0D;&#x8FC7;&#x8FD8;&#x662F;&#x81EA;&#x5DF1;&#x5199;&#x4E86;&#x4E00;&#x904D;&#xFF0C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172#include&lt;iostream&gt;#include&lt;algorithm&gt;using namespace std;#define MAXN 200000#define INF 10000000+5int nMax,nMin;//&#x6700;&#x5927;&#xFF0C;&#x6700;&#x5C0F;&#x503C; struct Node{ int l,r;//&#x5DE6;&#xFF0C;&#x53F3;&#x7AEF;&#x70B9; int nMin,nMax;//&#x5B58;&#x50A8;&#x5404;&#x4E2A;&#x533A;&#x95F4;&#x7684;&#x6700;&#x5927;&#x503C;&#x548C;&#x6700;&#x5C0F;&#x503C;}segTree[MAXN*4];int a[MAXN];void Build(int i,int l,int r) //&#x7ED3;&#x70B9;i&#x4E0A;&#x7684;&#x4E3A;&#x533A;&#x95F4;(l,r){ segTree[i].l=l; segTree[i].r=r; if(l==r) //&#x5230;&#x8FBE;&#x53F6;&#x5B50;&#x7ED3;&#x70B9; { segTree[i].nMin=segTree[i].nMax=a[l]; return; } int mid=(l+r)/2; Build(2*i,l,mid); //&#x5230;&#x8FBE;&#x53F6;&#x8282;&#x70B9;&#x65F6;&#x65E0;&#x987B;&#x6C42;&#x6700;&#x503C; Build(2*i|1,mid+1,r); segTree[i].nMin=min(segTree[2*i].nMin,segTree[2*i+1].nMin);//&#x672A;&#x5230;&#x8FBE;&#x53F6;&#x8282;&#x70B9;&#x65F6;&#xFF0C;&#x53D6;&#x5404;&#x4E2A;&#x533A;&#x95F4;&#x7684;&#x6700;&#x503C; segTree[i].nMax=max(segTree[2*i].nMax,segTree[2*i+1].nMax);}void Search(int i,int l,int r)//&#x67E5;&#x8BE2;&#x7ED3;&#x70B9;i&#x4E0A;l-r&#x7684;&#x6700;&#x5927;&#x503C;&#x548C;&#x6700;&#x5C0F;&#x503C;{ if(segTree[i].nMax&lt;=nMax&amp;&amp;segTree[i].nMin&gt;=nMin) //&#x65E0;&#x987B;&#x66F4;&#x65B0; return; if(segTree[i].l==l&amp;&amp;segTree[i].r==r) //&#x521A;&#x597D;&#x7B26;&#x5408; { nMax=max(segTree[i].nMax,nMax); nMin=min(segTree[i].nMin,nMin); return; } int mid=(segTree[i].l+segTree[i].r)/2;//&#x7EE7;&#x7EED;&#x5411;&#x4E0B;&#x5BFB;&#x627E; if(r&lt;=mid) Search(i*2,l,r); else if(l&gt;mid) Search(i*2+1,l,r); else { Search(i*2,l,mid); Search(i*2+1,mid+1,r); } }int main(){ int m,n; //m&#x5934;&#x725B;&#xFF0C;&#x5206;n&#x7EC4; int l,r; while(cin&gt;&gt;m&gt;&gt;n) { for(int i=1;i&lt;=m;i++) cin&gt;&gt;a[i]; Build(1,1,m); //&#x5EFA;&#x6811; for(int i=1;i&lt;=n;i++) { cin&gt;&gt;l&gt;&gt;r; //&#x8F93;&#x5165;&#x8981;&#x67E5;&#x8BE2;&#x7684;&#x533A;&#x95F4;&#x8303;&#x56F4; nMax=-INF;nMin=INF; //&#x521D;&#x59CB;&#x5316;&#x6700;&#x5927;&#x503C;&#x6700;&#x5C0F;&#x503C; Search(1,l,r); cout&lt;&lt;nMax-nMin&lt;&lt;endl; } } } &#x540E;&#x7EED;&#x672A;&#x5B8C;&#x7ED3;&#x3002;&#x3002;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","excerpt":"","tags":[{"name":"ACM","slug":"ACM","permalink":"http://molingu.top/tags/ACM/"}]}]